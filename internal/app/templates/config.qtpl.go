// Code generated by qtc from "config.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line config.qtpl:1
package templates

//line config.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line config.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line config.qtpl:1
func StreamHttpsConfig(qw422016 *qt422016.Writer, config NginxConfig) {
//line config.qtpl:1
	qw422016.N().S(`
server {
        listen 80;
        listen [::]:80;
        server_name `)
//line config.qtpl:5
	for _, e := range config.ServerNames {
//line config.qtpl:5
		qw422016.N().S(e)
//line config.qtpl:5
		qw422016.N().S(` `)
//line config.qtpl:5
	}
//line config.qtpl:5
	qw422016.N().S(`;
        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name `)
//line config.qtpl:13
	for _, e := range config.ServerNames {
//line config.qtpl:13
		qw422016.N().S(e)
//line config.qtpl:13
		qw422016.N().S(` `)
//line config.qtpl:13
	}
//line config.qtpl:13
	qw422016.N().S(`;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        ssl_certificate `)
//line config.qtpl:17
	qw422016.N().S(config.SSLFullChainPath)
//line config.qtpl:17
	qw422016.N().S(`;
        ssl_certificate_key `)
//line config.qtpl:18
	qw422016.N().S(config.SSLPrivateKeyPath)
//line config.qtpl:18
	qw422016.N().S(`;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

        location / {
            `)
//line config.qtpl:28
	if config.ProxyPass != "" {
//line config.qtpl:28
		qw422016.N().S(`
            proxy_pass `)
//line config.qtpl:29
		qw422016.N().S(config.ProxyPass)
//line config.qtpl:29
		qw422016.N().S(`;
            `)
//line config.qtpl:30
	}
//line config.qtpl:30
	qw422016.N().S(`
            `)
//line config.qtpl:31
	if config.LocalDir != "" {
//line config.qtpl:31
		qw422016.N().S(`
            root `)
//line config.qtpl:32
		qw422016.N().S(config.LocalDir)
//line config.qtpl:32
		qw422016.N().S(`;
            `)
//line config.qtpl:33
	}
//line config.qtpl:33
	qw422016.N().S(`
        }
}
`)
//line config.qtpl:36
}

//line config.qtpl:36
func WriteHttpsConfig(qq422016 qtio422016.Writer, config NginxConfig) {
//line config.qtpl:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line config.qtpl:36
	StreamHttpsConfig(qw422016, config)
//line config.qtpl:36
	qt422016.ReleaseWriter(qw422016)
//line config.qtpl:36
}

//line config.qtpl:36
func HttpsConfig(config NginxConfig) string {
//line config.qtpl:36
	qb422016 := qt422016.AcquireByteBuffer()
//line config.qtpl:36
	WriteHttpsConfig(qb422016, config)
//line config.qtpl:36
	qs422016 := string(qb422016.B)
//line config.qtpl:36
	qt422016.ReleaseByteBuffer(qb422016)
//line config.qtpl:36
	return qs422016
//line config.qtpl:36
}
